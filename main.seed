universal start:
{
    .arch_32  
    .end
    .file_sect
        extern: yield;
        extern: write;
    .end
    .code_sect 
       call main; 
    .end
};


global main:
{
    .declare_sect
        hold aisle: msg_01;
        hold aisle: msg_02;
    .end
    .assign_sect
        assign: buffer = num_value[32];
    .end
    .literal_sect
        assign: msg_01 = "Welcome to Seedling!",  hex_value[0x0A, 0x00];
        assign: msg_02 = "Its getting there!",  hex_value[0x0A, 0x00];
    .end
    .code_sect
        move_aisle: eax, msg_01;            
        call write;

        move_aisle: eax, msg_02;            
        call write;
    .end
} call yield;

