universal start:
{
    .arch_32  
    .end
    .code 
       call main; 
    .end
};


global main:
{
    .declare
        hold aisle: msg;
    .end
    .literal
        assign: msg = "Hello, World. Testing strand!",  hex_value[0x0A];
    .end
    .code
        move_aisle: ebx, msg;            
        move_aisle: eax, ebx;

        jump: next_char;
    .end
};

global_block next_char:
{
    .code
        comp_den: address[eax], num_value[0];
        jump_zero: finished;                   
        inc_aisle: eax;                      
        jump: next_char;                       
    .end
};

global_block finished:
{
    .code
        sub_aisle: eax, ebx;

        move_aisle: edx, eax;        
        move_aisle: ecx, msg;

        move_aisle: ebx, num_value[1]; 
        move_aisle: eax, num_value[4];    
        call_system;

        move_aisle: ebx, num_value[0];
        move_aisle: eax, num_value[1];
        call_system;
    .end
};