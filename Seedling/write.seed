global write:
{
   .code_sect
        push_aisle: edx;
        push_aisle: ecx;
        push_aisle: ebx;
        push_aisle: eax;

        call write.strand;
        move_aisle: edx, eax;
        pop_aisle: eax;

        move_aisle: ecx, eax;
    
        move_aisle: ebx, num_value[1]; 
        move_aisle: eax, num_value[4];    
        call_system;

        pop_aisle: ebx;
        pop_aisle: ecx;
        pop_aisle: edx;  
   .end
} pass_arg: edx;


local strand:
{
    .code_sect
        push_aisle: ebx;            
        move_aisle: ebx, eax;
    .end
} pass_arg: num_value[0];

local_block next_char:
{
    .code_sect
        comp_den: address[eax], num_value[0];
        jump_zero: finished;                   
        inc_aisle: eax;                      
        jump: next_char;                       
    .end
} pass_arg: num_value[0];


local_block finished:
{
    .code_sect
        sub_aisle: eax, ebx; 
        pop_aisle: ebx;
    .end
} pass_arg: eax;